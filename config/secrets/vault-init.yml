---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: vault-init
  namespace: operations
  labels:
    app.kubernetes.io/name: vault-init
---
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: vault-init
  namespace: operations
  labels:
    app.kubernetes.io/name: vault-init
rules:
- apiGroups: [""]
  resources: ["secrets"]
  verbs: ["get", "list", "create", "patch"]
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: vault-init
  namespace: operations
  labels:
    app.kubernetes.io/name: vault-init
data:
  init-vault: |-
    vault operator init --ca-cert=/certs/ca.crt \ 
      --root-token-pgp-key=keybase:crdant \
      --recovery-key-shares=keybase:crdant,keybase:crdant,keybase:crdant,keybase:crdant,keybase:crdant \
      --output json > /init/init.json
  save-secret: |-
    kubectl --namespace ${NAMESPACE} create secret generic vault-init-identity \
      --from-file init.json=/init/init.json 
    kubectl label secret vault-init-identity app.kubernetes.io/name=vault-init 
---
apiVersion: batch/v1
kind: Job
metadata:
  name: vault-init
  namespace: operations
  labels:
    app.kubernetes.io/name: vault-init
spec:
  template:
    metadata:
      labels:
        app.kubernetes.io/name: vault-init
    spec:
      securityContext:
        runAsUser: 65534
        fsGroup: 65534
      restartPolicy: Never
      serviceAccountName: vault-init
      containers:
      - name: create-identity
        image: vault
        command:
        - /bin/sh
        - /scripts/init-vault
        volumeMounts:
        - name: scripts
          mountPath: /scripts
        - name: init
          mountPath: /init
      - name: save-secret
        image: bitnami/kubectl
        env:
        - name: NAMESPACE
          valueFrom:
            fieldRef: 
              fieldPath: metadata.namespace
        command: 
        - /bin/sh
        - /scripts/save-secret
        volumeMounts:
        - name: scripts
          mountPath: /scripts
        - name: init
          mountPath: /init
      volumes:
      - name: scripts
        configMap:
          name: vault-init-create-identity
      - name: init
        emptyDir: {}