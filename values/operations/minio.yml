#@ load("@ytt:data", "data")
---
## Use existing secret (ignores accessKey, and secretKey passwords)
##
existingSecret: minio

## Mount MinIO secret as a file instead of passing environment variable
##
useCredentialsFile: true

## Define custom environment variables to pass to the image here
##
extraEnv: 
- name: MINIO_IDENTITY_LDAP_SERVER_ADDR
  value: #@ "ldaps://{}".format(data.values.ldap.host)
- name: MINIO_IDENTITY_LDAP_USERNAME_FORMAT
  value: #@ "uid=%s,ou=people,o=homelab,{}".format(data.values.ldap.baseDN)
- name: MINIO_IDENTITY_LDAP_USERNAME_SEARCH_FILTER
  value: (uid=%s)
- name: MINIO_IDENTITY_LDAP_GROUP_SEARCH_FILTER
  value: (&(objectclass=groupOfUniqueNames)(memberOf=%s))
- name: MINIO_IDENTITY_LDAP_GROUP_SEARCH_BASE_DN
  value: #@ "ou=groups,o=homelab,{}".format(data.values.ldap.baseDN)
- name: MINIO_IDENTITY_LDAP_USERNAME_SEARCH_BASE_DN
  value: #@ "ou=people,o=homelab,{}".format(data.values.ldap.baseDN)
- name: MINIO_IDENTITY_LDAP_GROUP_NAME_ATTRIBUTE
  value: cn
- name: MINIO_IDENTITY_LDAP_TLS_SKIP_VERIFY
  value: "off"
- name: MINIO_KMS_VAULT_ENDPOINT
  value: #@ data.values.vault.endpoint
- name: MINIO_KMS_VAULT_CAPATH
  value: /opt/bitnami/minio/secrets/vault.crt
- name: MINIO_KMS_VAULT_APPROLE_ID
  value: #@ data.values.vault.approle.id
- name: MINIO_KMS_VAULT_APPROLE_SECRET
  value: #@ data.values.vault.approle.secret
- name: MINIO_KMS_VAULT_AUTH_TYPE
  value: approle
- name: MINIO_KMS_VAULT_KEY_NAME
  value: minio
- name: MINIO_KMS_AUTO_ENCRYPTION
  value: "on"

## ref: http://kubernetes.io/docs/user-guide/persistent-volumes/
##
persistence:
  ## If true, use a Persistent Volume Claim, If false, use emptyDir
  ##
  enabled: true
  size: 300Gi
  storageClass: vsan

volumePermissions:
  enabled: true

## Configure the ingress resource that allows you to access the
## MinIO web browser. Set up the URL
## ref: http://kubernetes.io/docs/user-guide/ingress/
##
ingress:
  ## Set to true to enable ingress record generation
  enabled: true

  ## Set this to true in order to add the corresponding annotations for cert-manager
  certManager: false

  ## Ingress annotations done as key:value pairs
  ## For a full list of possible ingress annotations, please see
  ## ref: https://github.com/kubernetes/ingress-nginx/blob/master/docs/user-guide/nginx-configuration/annotations.md
  ##
  ## If tls is set to true, annotation ingress.kubernetes.io/secure-backends: "true" will automatically be set
  ## If certManager is set to true, annotation kubernetes.io/tls-acme: "true" will automatically be set
  annotations:
    ncp/use-regex: "True"

  ## The list of hostnames to be covered with this ingress record.
  ## Most likely this will be just one host, but in the event more hosts are needed, this is an array
  hosts:
    - name: s3.lab.crdant.net
      path: /(.*)

      ## Set this to true in order to enable TLS on the ingress record
      tls: true

      ## Optionally specify the TLS hosts for the ingress record
      ## Useful when the Ingress controller supports www-redirection
      ## If not specified, the above host name will be used
      # tlsHosts:
      # - www.minio.local
      # - minio.local

      ## If TLS is set to true, you must declare what secret will store the key/certificate for TLS
      tlsSecret: s3.lab.crdant.net-tls