#@ load("@ytt:data", "data")
---
injector:
  enabled: false 

server:
  ingress:
    enabled: true
    labels: {}
    annotations: 
      ncp/use-regex: "True"

      # |
      # kubernetes.io/ingress.class: nginx
      # kubernetes.io/tls-acme: "true"
    hosts:
      - host: vault.lab.crdant.net
        paths: 
        - /(.*)

    tls: 
    - secretName: vault.lab.crdant.net-tls
      hosts:
        - vault.lab.crdant.net

  authDelegator:
    enabled: false

  dataStorage:
    storageClass: vsan

  extraVolumes:
  - type: secret
    name: #@ data.values.gcp_credentials_secret
    
  # Run Vault in "standalone" mode. This is the default mode that will deploy if
  # no arguments are given to helm. This requires a PVC for data storage to use
  # the "file" backend.  This mode is not highly available and should not be scaled
  # past a single replica.

  #@yaml/text-templated-strings
  standalone:
    config: |
      ui = true

      listener "tcp" {
      tls_disable = 1
        address = "[::]:8200"
        cluster_address = "[::]:8201"
      }
      storage "file" {
        path = "/vault/data"
      }

      # Example configuration for using auto-unseal, using Google Cloud KMS. The
      # GKMS keys must already exist, and the cluster must have a service account
      # that is authorized to access GCP KMS.
      seal "gcpckms" {
        credentials = "/vault/userconfig/(@= data.values.gcp_credentials_secret @)/credentials.json"
        project     = "(@= data.values.project @)"
        region      = "global"
        key_ring    = "(@= data.values.unseal_key.ring @)"
        crypto_key  = "(@= data.values.unseal_key.key @)"
      }